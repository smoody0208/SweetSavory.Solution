@{
  Layout = "_Layout";
}

@using System.Security.Claims
@model SweetSavory.Models.Treat

<h1>Treat Details</h1>
<hr/>
<h3>@Html.DisplayNameFor(model => model.Name): @Html.DisplayFor(model => model.Name)</h3>
<br>
<h3>@Html.DisplayNameFor(model => model.Description): @Html.DisplayFor(model => model.Description)</h3>
<br>
<h3>@Html.DisplayNameFor(model => model.Ingredients): @Html.DisplayFor(model => model.Description)</h3>
@if(@Model.Flavors.Count == 0)
{
  <p>This Treat has not been added to any Flavors yet</p>
}
else
{
  <h4>Flavors associated with this Treat:</h4>
  <ul>
  @foreach(var join in Model.Flavors)
  {
    <p>@Html.ActionLink($"{join.Flavor.Name}", "Details", "Flavors", new { id = join.Flavor.FlavorId })</p>
    @if (User.Identity.IsAuthenticated && ViewBag.IsCurrentUser)
    {
      @using (Html.BeginForm("DeleteFlavor", "Treats"))
      {
        @Html.Hidden("joinId", @join.FlavorTreatId)
        <input type="submit" value="Delete"/>
      }
    }  
  }
  </ul>
}
<br>
<p>@Html.ActionLink("Back to Treats", "Index")</p>
<p>@Html.ActionLink("Home", "Index", "Home")</p>

@if (User.Identity.IsAuthenticated && ViewBag.IsCurrentUser)
{
  <p>@Html.ActionLink("Edit Treat", "Edit", new { id = Model.TreatId})</p>
  <p>@Html.ActionLink("Delete Treat", "Delete", new { id = Model.TreatId })</p>
  <p>@Html.ActionLink("Add Flavor", "AddFlavor", new { id = Model.TreatId })</p>
}  